name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgres://testuser:testpass@localhost:5432/testdb
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'

      - name: Install protoc
        uses: arduino/setup-protoc@v1
        with:
          version: '3.19.4'

      - name: Install protoc-gen-go
        run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest

      - name: Install protoc-gen-go-grpc
        run: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest

      - name: Generate proto code
        run: |
          protoc --go_out=pkg/api/generated --go_opt=paths=source_relative \
                 --go-grpc_out=pkg/api/generated --go_grpc_opt=paths=source_relative \
                 api/proto/*.proto

      - name: Tidy dependencies
        run: go mod tidy

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.42.1

      - name: Run golangci-lint
        run: golangci-lint run

      - name: Vet code
        run: go vet ./...

      - name: Install migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz
          mv migrate.linux-amd64 /usr/local/bin/migrate

      - name: Run migrations
        run: migrate -path migrations -database $DATABASE_URL up

      - name: Run tests
        run: go test ./...

      - name: Build binary
        run: go build -o t-lunch-backend ./cmd/main.go
